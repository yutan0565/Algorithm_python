"""
문제
당신은 음식점의 계산을 도와주는 점원 입니다. 카운터에서는 거스름돈으로 사용할
500월, 100원, 50원, 10원 짜리 동전이 무한히 존재한다고 가정합니다.
손님에게 거슬러 주어야 할 돈이 N원일 때 거슬러 주어야 할 동전의
최소 개수를 구하세요. 그러나, 거슬러 줘얗 할 돈 N은 항상 10의 배수 입니다.

아이디어
- 최적의 해를 빠르게 구하기 위해서는 가장 큰 화폐 단위부터 돈을 거슬러 준다.
- N원을 거슬러 줘야 할 때, 가장 먼저 500원으로 거슬러 줄 수 있을 만큼 거슬러준다.
   - 이후에 100, 50, 10원짜리 동전을 차례대로 거슬러 줄 수 있을 만큼 거슬러 주면 됨
- N = 1260일 떄 예시 확인 해보기

정당성 분석
-가장 큰 화폐 단위부터 돈을 거슬러 주는 것이 최적의 해를 보장하는 이유는?
    - 가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배수이므로 작은 단위의
    동전들을 종합해 다른 해가 나올 수 없기 때문
- 아이디어를 떠올리고, 최소한의 정당성을 찾아야함

시간 복잡도 분석
- 화폐의 종류가 K라고 할때, 소스코드의 시간 복잡도는 O(K)임
- 이 알고리즘의 시간 복잡도는 거슬러줘야 하는 금액과는 무고나, 동전의 종류에만 영향
"""

n = 1260 # 금액
count = 0 # 몇개의 동전?

#큰 단위의 화폐부터 차례대로 확인하기
array = [500, 100, 50, 10]
for coin in array: # 모든 코인에 대해서 큰거부터 나눠 주기
    count += n//coin
    n %=coin # 거스름돈 구하기
print(count)